<?xml version="1.0" encoding="UTF-8"?>

<!-- ==== mapper 기본설정 ==== -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- ==== 루트 엘리먼트 & 네임스페이스 설정(프로젝트 전체내에서 유일해야 한다.) ==== -->
<mapper namespace="minji_board">
	
      <!-- === #140. 원글쓰기 또는 답변글쓰기 (파일첨부가 없는 글쓰기) === 
      				 먼저 위의 #31 을 주석처리 한 이후에 아래처럼 해야 한다. -->
      <insert id="add" parameterType="BoardVO">
	      <!-- 원글쓰기인 경우 -->
	      <if test='fk_board_no == ""'>   <!-- 또는 'fk_seq.equals("")' 사용 -->
	         insert into tbl_board(board_no, fk_member_userid, board_name, board_subject, board_content, board_pw, board_readCount, board_regDate, board_status, board_groupno, fk_board_no, board_depthno)
	         values(seq_board_no.nextval, #{fk_member_userid}, #{board_name}, #{board_subject}, #{board_content}, #{board_pw}, default, default, default, #{board_groupno}, default, default)
	      </if>
	      
	      <!-- 답변글쓰기인 경우 -->
	      <if test='fk_board_no != ""'>  <!-- 또는 '!fk_seq.equals("")' 사용 -->
	         insert into tbl_board(board_no, fk_member_userid, board_name, board_subject, board_content, board_pw, board_readCount, board_regDate, board_status, board_groupno, fk_board_no, board_depthno)
	         values(seq_board_no.nextval, #{fk_member_userid}, #{board_name}, #{board_subject}, #{board_content}, #{board_pw}, default, default, default, #{board_groupno}, #{fk_board_no}, #{board_depthno}+1)
	      </if>
   	  </insert>
   	  
   	  
      <!-- === #155. 원글쓰기 또는 답변글쓰기 (파일첨부가 있는 글쓰기) === 
				     먼저 위의 #31 을 주석처리 한 이후에 아래처럼 해야 한다. -->
      <insert id="add_withFile" parameterType="BoardVO">
		<!-- 원글쓰기인 경우 -->
      	<if test='fk_board_no == ""'>   <!-- 또는 'fk_seq.equals("")' 사용 -->
         insert into tbl_board(board_no, fk_member_userid, board_name, board_subject, board_content, board_pw, board_readCount, board_regDate, board_status, board_groupno, fk_board_no, board_depthno, board_fileName, board_orgFilename, board_fileSize)
         values(seq_board_no.nextval, #{fk_member_userid}, #{board_name}, #{board_subject}, #{board_content}, #{board_pw}, default, default, default, #{board_groupno}, default, default, #{board_fileName}, #{board_orgFilename}, #{board_fileSize})
      </if>
      
      <!-- 답변글쓰기인 경우 -->
      <if test='fk_board_no != ""'>  <!-- 또는 '!fk_seq.equals("")' 사용 -->
         insert into tbl_board(board_no, fk_member_userid, board_name, board_subject, board_content, board_pw, board_readCount, board_regDate, board_status, board_groupno, fk_board_no, board_depthno, board_fileName, board_orgFilename, board_fileSize)
         values(seq_board_no.nextval, #{fk_member_userid}, #{board_name}, #{board_subject}, #{board_content}, #{board_pw}, default, default, default, #{board_groupno}, #{fk_board_no}, #{board_depthno}+1, #{board_fileName}, #{board_orgFilename}, #{board_fileSize})
      </if>
      </insert>
   
   
   <!-- === #35. 페이징 처리를 안한 검색어가 없는 전체 글목록 보여주기 === -->
<!-- 
   <select id="boardListNoSearch" resultType="BoardVO">
     select board_no, fk_member_userid, board_name, board_subject
          , board_readCount, to_char(board_regDate, 'yyyy-mm-dd hh24:mi:ss') AS board_regDate
     from tbl_board
     where board_status = 1
     order by board_no desc
   </select>
-->
   
   <!-- 먼저 #35 을 주석처리를 하고서 아래의 작업을 한다. -->
   <!-- === #76. 페이징 처리를 안한 검색어가 없는 전체 글목록 보여주기 
                 전체 글목록을 보여줄때 딸린 댓글의 개수도 보여준다. === -->                  
   <select id="boardListNoSearch" resultType="BoardVO">
     select board_no, fk_member_userid, board_name, board_subject
          , board_readCount, to_char(board_regDate, 'yyyy-mm-dd hh24:mi:ss') AS board_regDate
          , board_commentCount
     from tbl_board
     where board_status = 1
     order by board_no desc
   </select>
   
   
   <!-- === #39. 글 1개 조회하기 === -->
   <!-- 
 <select id="getView" resultType="BoardVO" parameterType="HashMap">
      SELECT previousseq, 
             case when length(previoussubject) &lt; 30 then previoussubject 
                    else substr(previoussubject, 1, 28)||'..' end AS previoussubject
           , board_no, fk_member_userid, board_name, board_subject, board_content, board_readCount, board_regDate, board_pw
           , nextseq,
             case when length(nextsubject) &lt; 30 then nextsubject 
                    else substr(nextsubject, 1, 28)||'..' end AS nextsubject
      FROM
       (
           select lag(board_no) over(order by board_no desc) AS previousseq
                , lag(board_subject) over(order by board_no desc) AS previoussubject
                , board_no, fk_member_userid, board_name, board_subject, board_content, board_readCount, board_regDate, board_pw  
                , lead(board_no) over(order by board_no desc) AS nextseq
                , lead(board_subject) over(order by board_no desc) AS nextsubject
           from tbl_board
           where board_status = 1
  -->          
 <!--      === #109. 이전글제목, 다음글제목 보여줄때 검색이 있는지 여부를 넘겨주기 시작 === --> 
  <!--
           <choose>
              <when test='searchType == "board_subject" and searchWord != ""'>
                 and lower(board_subject) like '%'||  lower(#{searchWord}) ||  '%'
              </when>
              <when test='searchType == "board_content" and searchWord != ""'>
               and lower(board_content) like '%'||  lower(#{searchWord}) ||  '%'
              </when>           
              <when test='searchType == "board_subject_board_content" and searchWord != ""'>
                 and (lower(board_subject) like '%'||  lower(#{searchWord}) ||  '%' or  and lower(board_content) like '%'||  lower(#{searchWord}) ||  '%')
              </when>   
              <when test='searchType == "board_name" and searchWord != ""'>
                 and lower(board_name) like '%'||  lower(#{searchWord}) ||  '%'
              </when>   
              <otherwise></otherwise>
           </choose>
   -->         
 <!--           === 이전글제목, 다음글제목 보여줄때 검색이 있는지 여부를 넘겨주기 끝 ===  -->
  <!--
       ) V
      WHERE V.board_no = #{board_no}
   </select>
      --> 
       
   <!-- === #132. 글글 및 답변글쓰기 게시판에서 글 1개 조회하기 === 
            먼저 위의 #39을 주석처리 하고서 아래와 같이 한다.
   -->
<!--  
   <select id="getView" resultType="BoardVO" parameterType="HashMap">
      SELECT previousseq, 
             case when length(previoussubject) &lt; 30 then previoussubject 
                    else substr(previoussubject, 1, 28)||'..' end AS previoussubject
           , board_no, fk_member_userid, board_name, board_subject, board_content, board_readCount, board_regDate, board_pw
           , nextseq, 
             case when length(nextsubject) &lt; 30 then nextsubject 
                    else substr(nextsubject, 1, 28)||'..' end AS nextsubject
           ,board_groupno, fk_board_no, board_depthno
      FROM
       (
           select lag(board_no) over(order by board_no desc) AS previousseq
                , lag(board_subject) over(order by board_no desc) AS previoussubject
                , board_no, fk_member_userid, board_name, board_subject, board_content, board_readCount, board_regDate, board_pw  
                , lead(board_no) over(order by board_no desc) AS nextseq
                , lead(board_subject) over(order by board_no desc) AS nextsubject
                ,board_groupno, fk_board_no, board_depthno
           from tbl_board
           where board_status = 1
-->
           <!-- === #109. 이전글제목, 다음글제목 보여줄때 검색이 있는지 여부를 넘겨주기 시작 === -->
 <!--           
           <choose>
              <when test='searchType == "board_subject" and searchWord != ""'>
                 and lower(board_subject) like '%'||  lower(#{searchWord}) ||  '%'
              </when>
              <when test='searchType == "board_content" and searchWord != ""'>
               and lower(board_content) like '%'||  lower(#{searchWord}) ||  '%'
              </when>           
              <when test='searchType == "board_subject_board_content" and searchWord != ""'>
                 and (lower(board_subject) like '%'||  lower(#{searchWord}) ||  '%' or lower(board_content) like '%'||  lower(#{searchWord}) ||  '%')
              </when>   
              <when test='searchType == "board_name" and searchWord != ""'>
                 and lower(board_name) like '%'||  lower(#{searchWord}) ||  '%'
              </when>   
              <otherwise></otherwise>
           </choose>
-->   
       
           <!-- === 이전글제목, 다음글제목 보여줄때 검색이 있는지 여부를 넘겨주기 끝 === -->
<!--
       ) V
      WHERE V.board_no = #{board_no}
   </select>
-->  



<select id="getView" resultType="BoardVO" parameterType="HashMap">
      SELECT previousseq, 
             case when length(previoussubject) &lt; 30 then previoussubject 
                    else substr(previoussubject, 1, 28)||'..' end AS previoussubject
           , board_no, fk_member_userid, board_name, board_subject, board_content, board_readCount, board_regDate, board_pw
           , nextseq, 
             case when length(nextsubject) &lt; 30 then nextsubject 
                    else substr(nextsubject, 1, 28)||'..' end AS nextsubject
           , board_groupno, fk_board_no, board_depthno
           , board_fileName, board_orgFilename, board_fileSize
      FROM
       (
           select lag(board_no) over(order by board_no desc) AS previousseq
                , lag(board_subject) over(order by board_no desc) AS previoussubject
                , board_no, fk_member_userid, board_name, board_subject, board_content, board_readCount, board_regDate, board_pw  
                , lead(board_no) over(order by board_no desc) AS nextseq
                , lead(board_subject) over(order by board_no desc) AS nextsubject
                , board_groupno, fk_board_no, board_depthno
                , board_fileName, board_orgFilename, board_fileSize
           from tbl_board
           where board_status = 1
           
           <!-- === #109. 이전글제목, 다음글제목 보여줄때 검색이 있는지 여부를 넘겨주기 시작 === -->
              <choose>
                 <when test='searchType == "board_subject" and searchWord != ""'>
                       and lower(board_subject) like '%'||lower(#{searchWord})||'%'
                 </when>
                 <when test='searchType == "board_content" and searchWord != ""'>
                       and lower(board_content) like '%'||lower(#{searchWord})||'%'
                 </when>
                 <when test='searchType == "board_subject_board_content" and searchWord != ""'>
                       and (lower(board_subject) like '%'||lower(#{searchWord})||'%' or lower(board_content) like '%'||lower(#{searchWord})||'%')
                 </when>
                 <when test='searchType == "board_name" and searchWord != ""'>
                       and lower(board_name) like '%'||lower(#{searchWord})||'%'
                 </when>
                 <otherwise></otherwise>
              </choose>
           <!-- === #109. 이전글제목, 다음글제목 보여줄때 검색이 있는지 여부를 넘겨주기 끝 === -->
       ) V
      WHERE V.board_no = to_number(#{board_no})
   </select>


   <!-- === #41. 글조회수 1증가 하기 === -->
   <update id="increase_readCount" parameterType="String">
        update tbl_board set board_readCount = board_readCount + 1
        where board_no = to_number(#{board_no})
   </update>
   
   
   <!-- === #50. 1개글 수정하기 === -->
   <update id="edit" parameterType="BoardVO">
          update tbl_board set board_subject = #{board_subject}
                             , board_content = #{board_content} 
          where board_no = #{board_no}
   </update>
   
   
   <!--  === #166. 1개글 삭제할 때 먼저 사진이미지파일명 및 첨부파일명을 알아오기 위한 것 ===  -->
	<resultMap type="HashMap" id="getView_delete_map">
		<result property="board_no" 			column="board_no" 			javaType="String"/>
		<result property="board_fileName" 		column="board_fileName" 	javaType="String"/>
		<result property="photofilename"	 	column="photofilename" 		javaType="String"/>
	</resultMap>
	
	<select id="getView_delete" parameterType="String" resultMap="getView_delete_map"> 
		select board_no, board_fileName, substr(func_photo_upload_delete(board_no), 2) AS photofilename 
		from tbl_board 
		where board_no = #{board_no} 
	</select>
   
   
   <!-- === #55. 1개글 삭제하기 === -->
   <delete id="del" parameterType="String">
        delete from tbl_board
        where board_no = #{board_no}
   </delete>

   <!-- === #62.1  댓글쓰기(tbl_comment 테이블에 insert) === -->
   <insert id="addComment" parameterType="CommentVO">
   
      <!-- 첨부파일이 없는 경우 -->
      <if test="comment_fileName == null">
      insert into tbl_comment(comment_no, fk_board_no, fk_member_userid, comment_name, comment_content, comment_regDate, comment_parentSeq, comment_status)
      values(seq_comment_no.nextval, #{comment_parentSeq}, #{fk_member_userid}, #{comment_name}, #{comment_content}, default, #{comment_parentSeq}, default)
      </if>
      
      <!--  === #176. 첨부파일이 있는 경우 ===  -->
		<if test="comment_fileName != null"> 
		insert into tbl_comment(comment_no, fk_board_no, fk_member_userid, comment_name, comment_content, comment_regDate, comment_parentSeq, comment_status, comment_fileName, comment_orgFilename, comment_fileSize) 
		values(seq_comment_no.nextval, #{comment_parentSeq}, #{fk_member_userid}, #{comment_name}, #{comment_content}, default, #{comment_parentSeq}, default, #{comment_fileName}, #{comment_orgFilename}, #{comment_fileSize}) 
		</if>
	</insert> 

   <!-- === #62.2  tbl_board 테이블에 commentCount 컬럼이 1증가(update) === -->
   <update id="updateCommentCount" parameterType="String">
       update tbl_board set board_commentCount = board_commentCount + 1
       where board_no = to_number(#{comment_parentSeq})
   </update>
   
   
   <!-- === #66. 원게시물에 딸린 댓글들을 조회해오기 === -->
   <!-- 첨부파일이 없는 경우 -->
   <select id="getCommentList" parameterType="String" resultType="CommentVO">
      select comment_no, fk_member_userid, comment_name, comment_content
           , to_char(comment_regDate, 'yyyy-mm-dd hh24:mi:ss') AS comment_regDate
      from tbl_comment
      where comment_parentSeq = #{comment_parentSeq}
      order by comment_no desc
   </select>
   
   
   <!-- === #71. 댓글 수정(Ajax 로 처리) === -->
   <update id="updateComment" parameterType="HashMap">
        update tbl_comment 
        set comment_content = #{comment_content}, comment_regdate = sysdate
		where comment_no = to_number(#{comment_no})
   </update>
   
   
   <!-- === #75.1 댓글 삭제(Ajax 로 처리) === -->
   <delete id="deleteComment" parameterType="String">
       delete from tbl_comment
       where comment_no = to_number(#{comment_no})
   </delete>

   <!-- === #75.2 댓글삭제시 tbl_board 테이블에 commentCount 컬럼이 1감소(update) === -->
   <update id="updateCommentCount_decrease" parameterType="String">
       update tbl_board set board_commentCount = board_commentCount - 1 
       where board_no = to_number(#{comment_parentSeq})
   </update>


   <!-- #### 중요 #### 
       HashMap 타입으로 매개변수를 받아온 것을 꺼내서 사용할때 
       1. 데이터로 사용할때는 #{key명} 이고,
       2. 식별자(테이블명, 컬럼명)로 사용할때는 ${key명} 이고,
       3. myBatis 에서 제공하는 if 엘리먼트나 choose 엘리먼트 안에서 사용할때는 
             그냥 <if test="key명"> <when test="key명"> 으로 사용한다. 
   -->
   <!-- === #86. 페이징 처리를 안한 검색어가 있는 전체 글목록 보여주기 === -->
   <select id="boardListSearch" parameterType="HashMap" resultType="BoardVO">
      select board_no, fk_member_userid, board_name, board_subject
          , board_readCount, to_char(regDate, 'yyyy-mm-dd hh24:mi:ss') AS board_regDate
          , board_commentCount
     from tbl_board
     where status = 1
     <choose>
        <when test='searchType == "board_subject" and searchWord != ""'>
           and lower(board_subject) like '%'||lower(#{searchWord})||'%'  
        </when>
        <when test='searchType == "board_content" and searchWord != ""'>
           and lower(board_content) like '%'||lower(#{searchWord})||'%'
        </when>
        <when test='searchType == "board_subject_board_content" and searchWord != ""'>
           and (lower(board_subject) like '%'||lower(#{searchWord})||'%' or lower(board_content) like '%'||lower(#{searchWord})||'%') 
        </when>
        <when test='searchType == "name" and searchWord != ""'>
           and lower(board_name) like '%'||lower(#{searchWord})||'%'
        </when>
        <otherwise></otherwise>
     </choose>
     order by board_no desc
   </select>


   <!-- === #92. 검색어 입력시 자동글 완성하기 6 === -->
   <select id="wordSearchShow" parameterType="HashMap" resultType="String">
      <choose>
        <when test='searchType == "board_subject"'>
          select board_subject
        </when>
        <otherwise>
          select distinct board_name
        </otherwise>
      </choose>
          from tbl_board
          where board_status = 1
      <choose>
         <when test='searchType == "board_subject" and searchWord != ""'>
            and lower(board_subject) like '%'||lower(#{searchWord})||'%'
         </when>
         <otherwise>
            and lower(board_name) like '%'||lower(#{searchWord})||'%'   
         </otherwise>
      </choose>
      <!-- select 문에서 distinct 와 order by 절을 함께 사용할때는 조심해야 한다.
           order by 절에는 select 문에서 사용된 컬럼만 들어올 수가 있다.
           또는 order by 절을 사용하지 않아야 한다. -->
      <choose>
         <when test='searchType == "board_subject"'>
            order by board_regDate desc
         </when>
         <otherwise>
            order by board_name asc
         </otherwise>
      </choose>     
           
   </select>


   <!-- === #98. 총 게시물 건수(totalCount) 구하기 검색이 있을 때와 검색이 없을 때로 나뉜다. === -->
   <select id="getTotalCount" parameterType="HashMap" resultType="int">
         select count(*)
         from tbl_board
         where board_status = 1
         <choose>
            <when test='searchType == "board_subject" and searchWord != ""'>
               and lower(board_subject) like '%'|| lower(#{searchWord}) ||'%'
            </when>
            <when test='searchType == "board_content" and searchWord != ""'>
               and lower(board_content) like '%'|| lower(#{searchWord}) ||'%'
            </when>
            <when test='searchType == "board_subject_board_content" and searchWord != ""'>
               and ( lower(board_subject) like '%'|| lower(#{searchWord}) ||'%' or lower(board_content) like '%'|| lower(#{searchWord}) ||'%')
            </when>
            <when test='searchType == "board_name" and searchWord != ""'>
               and lower(board_name) like '%'|| lower(#{searchWord}) ||'%'
            </when>
            <otherwise></otherwise>
         </choose>
   </select>
   <!-- otherwise는 전체(나머지) -->



 <!-- === #101. "Oracle 11g 와 호환" 글목록 가져오기(페이징 처리 했으며, 검색어가 있는 것 또는 검색어가 없는 것 모두 다 포함한 것이다.) === -->
   <!--  
   <select id="boardListSearch_withPaging" parameterType="HashMap" resultType="BoardVO">
         select seq, fk_userid, name, subject, readCount, regDate, commentCount
	      from 
	      (
	          select row_number() over(order by seq desc) as rno
	               , seq, fk_userid, name, subject
	               , readCount, to_char(regDate, 'yyyy-mm-dd hh24:mi:ss') AS regDate 
	               , commentCount
	          from tbl_board
	          where status = 1
	          <choose>
	             <when test='searchType == "subject" and searchWord != "" '>
	                and lower(subject) like '%'|| lower(#{searchWord}) ||'%'
	             </when>
	             <when test='searchType == "content" and searchWord != "" '>
	                and lower(content) like '%'|| lower(#{searchWord}) ||'%'
	             </when>
	             <when test='searchType == "subject_content" and searchWord != "" '>
	                and (lower(subject) like '%'|| lower(#{searchWord}) ||'%') or (lower(content) like '%'|| lower(#{searchWord}) ||'%')
	             </when>
	             <when test='searchType == "name" and searchWord != "" '>
	                and lower(name) like '%'|| lower(#{searchWord})   
	             </when>
	             <otherwise></otherwise>
	          </choose>          
	      ) v
	      where rno between #{startRno} and #{endRno}
   </select>
   -->


   <!-- === #101. " Oracle 12c 이상" 글목록 가져오기(페이징 처리 했으며, 검색어가 있는 것 또는 검색어가 없는 것 모두 다 포함한 것이다.) === -->
<!--   
   <select id="boardListSearch_withPaging" parameterType="HashMap" resultType="BoardVO">
         select seq, fk_userid, name, subject
           , readCount, to_char(regDate, 'yyyy-mm-dd hh24:mi:ss') AS regDate 
           , commentCount
      from tbl_board
      where status = 1
      <choose>
          <when test='searchType == "subject" and searchWord != "" '>
             and lower(subject) like '%'|| lower(#{searchWord}) ||'%'
          </when>
          <when test='searchType == "content" and searchWord != "" '>
             and lower(content) like '%'|| lower(#{searchWord}) ||'%'
          </when>
          <when test='searchType == "subject_content" and searchWord != "" '>
             and (lower(subject) like '%'|| lower(#{searchWord}) ||'%') or (lower(content) like '%'|| lower(#{searchWord}) ||'%')
          </when>
          <when test='searchType == "name" and searchWord != "" '>
             and lower(name) like '%'|| lower(#{searchWord})   
          </when>
          <otherwise></otherwise>
       </choose>         
      order by seq desc
      offset (to_number(#{currentShowPageNo} - 1))*10 row   
      fetch next 10 row only
   </select>
-->   
   
   
<!-- 파일첨부가 없는 -->
 <!-- === #141. "Oracle 11g 와 호환" 답변형 게시판의 글목록 가져오기(페이징 처리 했으며, 검색어가 있는 것 또는 검색어가 없는 것 모두 포함한 것이다.) ===
                먼저, 위의 #101 을 주석처리 한 이후에 아래처럼 해야 한다. --> 
 <!--   
   <select id="boardListSearch_withPaging" parameterType="HashMap" resultType="BoardVO"> 
      SELECT seq, fk_userid, name, subject, readCount, regDate, commentCount
           , groupno, fk_seq, depthno
      FROM 
      (  
        SELECT rownum AS rno
             , seq, fk_userid, name, subject, readCount, regDate, commentCount
             , groupno, fk_seq, depthno
        FROM 
        (
            select seq, fk_userid, name, subject
                 , readCount, to_char(regDate, 'yyyy-mm-dd hh24:mi:ss') AS regDate 
                 , commentCount
                 , groupno, fk_seq, depthno
            from tbl_board
            where status = 1 
            <choose>
             <when test='searchType == "subject" and searchWord != ""'>
               and lower(subject) like '%'||lower(#{searchWord})||'%'
             </when>
             <when test='searchType == "content" and searchWord != ""'>
               and lower(content) like '%'||lower(#{searchWord})||'%'
             </when>
             <when test='searchType == "subject_content" and searchWord != ""'>
               and (lower(subject) like '%'||lower(#{searchWord})||'%' or lower(content) like '%'||lower(#{searchWord})||'%')
             </when>
             <when test='searchType == "name" and searchWord != ""'>
               and lower(name) like '%'||lower(#{searchWord})||'%'
             </when>
             <otherwise></otherwise>
          </choose>
            start with fk_seq = 0 
            connect by prior seq = fk_seq
            order siblings by groupno desc, seq asc               
        ) V
      ) T   
      WHERE rno BETWEEN to_number(#{startRno}) AND to_number(#{endRno})
   </select>
 -->  
   <!-- 
        order by 로 정렬할 경우는 select 되어진 모든 데이터를 가지고 정렬을 하는 것이고,
        order siblings by 각 계층별로 정렬을 하는 것이다. 
        order by 로만 정렬을 하게 되면 계층구조가 깨질수 있기 때문에 계층구조는 그대로 유지하면서 동일 부모를 가진 자식행들 끼리의 정렬 기준을 주는 것이 order siblings by 이다.
   -->
   
   
   <!-- === #141. "Oracle 12c 이상에서만 가능함" 답변형 게시판의 글목록 가져오기(페이징 처리 했으며, 검색어가 있는 것 또는 검색어가 없는 것 모두 포함한 것이다.) === --> 
<!--   
   <select id="boardListSearch_withPaging" parameterType="HashMap" resultType="BoardVO"> 
      select seq, fk_userid, name, subject
           , readCount, to_char(regDate, 'yyyy-mm-dd hh24:mi:ss') AS regDate 
           , commentCount
           , groupno, fk_seq, depthno 
      from tbl_board
      where status = 1 
      <choose>
          <when test='searchType == "subject" and searchWord != ""'>
            and lower(subject) like '%'||lower(#{searchWord})||'%'
          </when>
          <when test='searchType == "content" and searchWord != ""'>
            and lower(content) like '%'||lower(#{searchWord})||'%'
          </when>
          <when test='searchType == "subject_content" and searchWord != ""'>
            and (lower(subject) like '%'||lower(#{searchWord})||'%' or lower(content) like '%'||lower(#{searchWord})||'%')
          </when>
          <when test='searchType == "name" and searchWord != ""'>
            and lower(name) like '%'||lower(#{searchWord})||'%'
          </when>
          <otherwise></otherwise>
       </choose>
       START WITH fk_seq = 0 
      CONNECT BY PRIOR seq = fk_seq
      ORDER SIBLINGS BY groupno DESC, seq ASC
      OFFSET (to_number(#{currentShowPageNo})-1)*10 ROW  
      FETCH NEXT 10 ROW ONLY
   </select>   
--> 
   <!-- 
        order by 로 정렬할 경우는 select 되어진 모든 데이터를 가지고 정렬을 하는 것이고,
        order siblings by 각 계층별로 정렬을 하는 것이다. 
        order by 로만 정렬을 하게 되면 계층구조가 깨질수 있기 때문에 계층구조는 그대로 유지하면서 동일 부모를 가진 자식행들 끼리의 정렬 기준을 주는 것이 order siblings by 이다.
   -->



<!-- 파일첨부가 있는 -->
<!-- === #157. "Oracle 11g 와 호환" 파일첨부가 있는 답변형 게시판의 글목록 가져오기(페이징 처리 했으며, 검색어가 있는 것 또는 검색어가 없는 것 모두 포함한 것이다.) ===
                먼저, 위의 #141 을 주석처리 한 이후에 아래처럼 해야 한다. --> 
   
   <select id="boardListSearch_withPaging" parameterType="HashMap" resultType="BoardVO"> 
      SELECT board_no, fk_member_userid, board_name, board_subject, board_readCount, board_regDate, board_commentCount
           , board_groupno, fk_board_no, board_depthno
           , board_fileName
      FROM 
      (  
        SELECT rownum AS rno
             ,  board_no, fk_member_userid, board_name, board_subject, board_readCount, board_regDate, board_commentCount
             , board_groupno, fk_board_no, board_depthno, board_fileName
        FROM 
        (
            select board_no, fk_member_userid, board_name, board_subject
                 , board_readCount, to_char(board_regDate, 'yyyy-mm-dd hh24:mi:ss') AS board_regDate 
                 , board_commentCount
                 , board_groupno, fk_board_no, board_depthno
                 , board_fileName
            from tbl_board
            where board_status = 1 
            <choose>
             <when test='searchType == "board_subject" and searchWord != ""'>
               and lower(board_subject) like '%'||lower(#{searchWord})||'%'
             </when>
             <when test='searchType == "board_content" and searchWord != ""'>
               and lower(board_content) like '%'||lower(#{searchWord})||'%'
             </when>
             <when test='searchType == "board_subject_board_content" and searchWord != ""'>
               and (lower(board_subject) like '%'||lower(#{searchWord})||'%' or lower(board_content) like '%'||lower(#{searchWord})||'%')
             </when>
             <when test='searchType == "board_name" and searchWord != ""'>
               and lower(board_name) like '%'||lower(#{searchWord})||'%'
             </when>
             <otherwise></otherwise>
          </choose>
            start with fk_board_no = 0 
            connect by prior board_no = fk_board_no
            order siblings by board_groupno desc, board_no asc               
        ) V
      ) T   
      WHERE rno BETWEEN to_number(#{startRno}) AND to_number(#{endRno})
   </select>

   <!-- 
        order by 로 정렬할 경우는 select 되어진 모든 데이터를 가지고 정렬을 하는 것이고,
        order siblings by 각 계층별로 정렬을 하는 것이다. 
        order by 로만 정렬을 하게 되면 계층구조가 깨질수 있기 때문에 계층구조는 그대로 유지하면서 동일 부모를 가진 자식행들 끼리의 정렬 기준을 주는 것이 order siblings by 이다.
   -->
   
   
   <!-- === #156. "Oracle 12c 이상에서만 가능함" 파일첨부가 있는 답변형 게시판의 글목록 가져오기(페이징 처리 했으며, 검색어가 있는 것 또는 검색어가 없는 것 모두 포함한 것이다.) === --> 
<!--  
   <select id="boardListSearch_withPaging" parameterType="HashMap" resultType="BoardVO"> 
      select board_name, fk_member_userid, board_name, board_subject
           , board_readCount, to_char(board_regDate, 'yyyy-mm-dd hh24:mi:ss') AS board_regDate 
           , board_commentCount
           , board_groupno, fk_board_no, board_depthno 
           , board_fileName
      from tbl_board
      where board_status = 1 
      <choose>
          <when test='searchType == "board_subject" and searchWord != ""'>
            and lower(board_subject) like '%'||lower(#{searchWord})||'%'
          </when>
          <when test='searchType == "board_content" and searchWord != ""'>
            and lower(board_content) like '%'||lower(#{searchWord})||'%'
          </when>
          <when test='searchType == "board_subject_board_content" and searchWord != ""'>
            and (lower(board_subject) like '%'||lower(#{searchWord})||'%' or lower(board_content) like '%'||lower(#{searchWord})||'%')
          </when>
          <when test='searchType == "board_name" and searchWord != ""'>
            and lower(board_name) like '%'||lower(#{searchWord})||'%'
          </when>
          <otherwise></otherwise>
       </choose>
       START WITH FK_BOARD_NO = 0 
      CONNECT BY PRIOR board_no = fk_board_no
      ORDER SIBLINGS BY board_groupno DESC, board_no ASC
      OFFSET (to_number(#{currentShowPageNo})-1)*10 ROW  
      FETCH NEXT 10 ROW ONLY
   </select>  
-->    
   <!-- 
        order by 로 정렬할 경우는 select 되어진 모든 데이터를 가지고 정렬을 하는 것이고,
        order siblings by 각 계층별로 정렬을 하는 것이다. 
        order by 로만 정렬을 하게 되면 계층구조가 깨질수 있기 때문에 계층구조는 그대로 유지하면서 동일 부모를 가진 자식행들 끼리의 정렬 기준을 주는 것이 order siblings by 이다.
   -->



   <!-- === #121. 원게시물에 딸린 댓글내용들을 페이징 처리하기 === -->
   <select id="getCommentList_Paging" parameterType="HashMap" resultType="CommentVO">
       <!-- 첨부파일이 없는 경우 -->
       <!-- Oracle 11g -->
<!--       
       SELECT comment_no, fk_member_userid, comment_name, comment_content, comment_regDate
      FROM
      (
       select row_number() over(order by comment_no desc) AS rno
           , comment_no, fk_member_userid, comment_name, comment_content
           , to_char(comment_regDate, 'yyyy-mm-dd hh24:mi:ss') AS comment_regDate
            from tbl_comment
            where comment_parentSeq = to_number(#{comment_parentSeq})
            order by comment_no desc
      ) V
      WHERE rno BETWEEN #{startRno} AND #{endRno}
-->        
       
       <!-- Oracle 12C 이상 
       select comment_no, fk_member_userid, comment_name, comment_content
          , to_char(comment_regDate, 'yyyy-mm-dd hh24:mi:ss') AS comment_regDate
      from tbl_comment
      where comment_parentSeq = to_number(#{comment_parentSeq})
      order by comment_no desc
      OFFSET (to_number(#{currentShowPageNo})-1)*to_number(#{sizePerPage}) ROW
      FETCH NEXT to_number(#{sizePerPage}) ROW ONLY
      --> 
       
       	<!-- #177. 첨부파일이 있는 경우 -->
      	<!--  Oracle 11g  -->
		SELECT comment_no, fk_member_userid, comment_name, comment_content, comment_regDate , comment_fileName, comment_orgFilename, comment_fileSize 
		FROM 
		( 
			select row_number() over(order by comment_no desc) AS rno 
				, comment_no, fk_member_userid, comment_name, comment_content , to_char(comment_regDate, 'yyyy-mm-dd hh24:mi:ss') AS comment_regDate 
				, nvl(comment_fileName, ' ' ) AS comment_fileName 
				, nvl(comment_orgFilename, ' ') AS comment_orgFilename 
				, nvl(to_char(comment_fileSize), ' ') AS comment_fileSize 
			from tbl_comment 
			where comment_parentSeq = to_number(#{comment_parentSeq}) 
		) V 
		WHERE rno BETWEEN #{startRno} AND #{endRno}
		
   </select>
   
   <!-- === #124. 페이징 처리시 보여주는 순번을 나타내기 위한 것 === -->
   <select id="getCommentTotalCount" parameterType="String" resultType="int">
         select count(*)
         from tbl_comment
         where comment_parentSeq = to_number(#{comment_parentSeq})
   </select>
   
   
   <!-- === #.139 tbl_board 테이블에서 groupno 컬럼의 최대값 알아오기 (count니까 int) ===  -->
   <select id="getBoard_groupnoMax" resultType="int">
   		select nvl(max(board_groupno), 0)
   		from tbl_board
   </select>
   
   
   <!--  === #183. 파일첨부가 되어진 댓글 1개에서 서버에 업로드 되어진 파일명과 오리지널파일명을 조회해주는 것 ===  -->
	<select id="getCommentOne" parameterType="String" resultType="CommentVO"> 
		select nvl(comment_fileName, ' ') AS comment_fileName , nvl(comment_orgFilename, ' ') AS comment_orgFilename 
		from tbl_comment where comment_no = #{comment_no} 
	</select>
   
   
   
   
   
   

<!-- 												즐겨찾기 시작 														   -->

<!-- 즐겨찾기 추가 -->
<insert id="insertBookmark" parameterType="HashMap">
	insert into tbl_bookmark (fk_board_no, fk_member_userid)
    values (#{board_no}, #{member_userid})
</insert>

<!-- 즐겨찾기 삭제 -->
<delete id="deleteBookmark" parameterType="HashMap">
	delete from tbl_bookmark
	where fk_board_no = #{board_no}
	and fk_member_userid = #{member_userid}
</delete>


<!-- 즐겨찾기 중복 체크 -->
<select id="checkBookmark" parameterType="HashMap" resultType="int">
    select count(*) 
    from tbl_bookmark 
    where fk_board_no = #{board_no} 
    and fk_member_userid = #{member_userid}
</select>


<!-- 즐겨찾기 한 게시물 조회 -->
<select id="getBookmarkList" parameterType="HashMap" resultType="BoardVO">
    select b.*, to_char(bm.bookmark_date, 'yyyy-mm-DD hh24:mi:ss') as bookmark_date
	from tbl_board b
	join tbl_bookmark bm on b.board_no = bm.fk_board_no
	where bm.fk_member_userid = #{member_userid}
	order by bm.bookmark_date desc
</select>

<!-- 즐겨찾기한 게시물 개수 조회 (검색 포함) -->
   <select id="getBookmarkCountWithSearch" parameterType="map" resultType="int">
       select count(*)
       from tbl_board b
       join tbl_bookmark bm on b.board_no = bm.fk_board_no
       where bm.fk_member_userid = #{member_userid}
       <if test="searchType != '' and searchWord != ''">
           <if test="searchType == 'board_subject'">
               and b.board_subject like '%' || #{searchWord} || '%'
           </if>
           <if test="searchType == 'board_content'">
               and b.board_content like '%' || #{searchWord} || '%'
           </if>
           <if test="searchType == 'board_name'">
               and b.board_name like '%' || #{searchWord} || '%'
           </if>
           <if test="searchType == 'board_subject_board_content'">
               and (b.board_subject like '%' || #{searchWord} || '%' 
                   or b.board_content like '%' || #{searchWord} || '%')
           </if>
       </if>
   </select>

    <!-- 즐겨찾기한 게시물 목록 조회 (검색 및 페이징 적용) -->
    <select id="getBookmarkListPagedWithSearch" parameterType="map" resultType="BoardVO">
        SELECT * FROM (
            SELECT ROWNUM AS rnum, a.*
            FROM (
                SELECT b.*, bm.bookmark_date
                FROM tbl_board b
                JOIN tbl_bookmark bm ON b.board_no = bm.fk_board_no
                WHERE bm.fk_member_userid = #{member_userid}
                <if test="searchType != '' and searchWord != ''">
                    <if test="searchType == 'board_subject'">
                        AND b.board_subject LIKE '%' || #{searchWord} || '%'
                    </if>
                    <if test="searchType == 'board_content'">
                        AND b.board_content LIKE '%' || #{searchWord} || '%'
                    </if>
                    <if test="searchType == 'board_name'">
                        AND b.board_name LIKE '%' || #{searchWord} || '%'
                    </if>
                    <if test="searchType == 'board_subject_board_content'">
                        AND (b.board_subject LIKE '%' || #{searchWord} || '%' 
                            OR b.board_content LIKE '%' || #{searchWord} || '%')
                    </if>
                </if>
                ORDER BY bm.bookmark_date DESC
            ) a
        )
        WHERE rnum BETWEEN #{startRno} AND #{endRno}
    </select>


<resultMap type="HashMap" id="selectBookmark_map">
		<result property="fk_board_no" 			column="fk_board_no" 			javaType="String"/>
	</resultMap>
<select id="selectBookmark" parameterType="String" resultMap="selectBookmark_map">
	select fk_board_no 
	from tbl_bookmark
	where fk_member_userid =#{member_userid}
</select>







<!-- 												즐겨찾기 끝  														   -->
   
   
   
   
   
   
   
<!-- 											  내가쓴글조회 시작 														-->   
<select id="getMyboard" resultType="BoardVO">
    select * from tbl_board
    where fk_member_userid = #{member_userid}
    and board_status = 1
    order by board_regdate desc
</select>



<!-- 내가 작성한 글 개수 조회 (검색 조건 포함) -->
<select id="getMyBoardCountWithSearch" parameterType="HashMap" resultType="int">
    SELECT COUNT(*)
    FROM tbl_board
    WHERE board_status = 1
    AND fk_member_userid = #{member_userid}
    <choose>
        <when test="searchType == 'board_subject' and searchWord != ''">
            AND lower(board_subject) LIKE '%' || lower(#{searchWord}) || '%'
        </when>
        <when test="searchType == 'board_content' and searchWord != ''">
            AND lower(board_content) LIKE '%' || lower(#{searchWord}) || '%'
        </when>
        <when test="searchType == 'board_subject_board_content' and searchWord != ''">
            AND (lower(board_subject) LIKE '%' || lower(#{searchWord}) || '%'
                 OR lower(board_content) LIKE '%' || lower(#{searchWord}) || '%')
        </when>
        <when test="searchType == 'board_name' and searchWord != ''">
            AND lower(board_name) LIKE '%' || lower(#{searchWord}) || '%'
        </when>
        <otherwise></otherwise>
    </choose>
</select>


<!-- 게시물 목록 조회 -->
<select id="getMyboardPagedWithSearch" parameterType="HashMap" resultType="BoardVO">
    SELECT board_no, fk_member_userid, board_name, board_subject, board_readCount, board_regDate, board_commentCount
         , board_groupno, fk_board_no, board_depthno, board_fileName
    FROM 
    (  
        SELECT rownum AS rno
             , board_no, fk_member_userid, board_name, board_subject, board_readCount, board_regDate, board_commentCount
             , board_groupno, fk_board_no, board_depthno, board_fileName
        FROM 
        (
            SELECT board_no, fk_member_userid, board_name, board_subject
                 , board_readCount, to_char(board_regDate, 'yyyy-mm-dd hh24:mi:ss') AS board_regDate 
                 , board_commentCount, board_groupno, fk_board_no, board_depthno, board_fileName
            FROM tbl_board
            WHERE board_status = 1 
            AND fk_member_userid = #{member_userid} 
            <choose>
                <when test="searchType == 'board_subject' and searchWord != ''">
                    AND lower(board_subject) LIKE '%' || lower(#{searchWord}) || '%'
                </when>
                <when test="searchType == 'board_content' and searchWord != ''">
                    AND lower(board_content) LIKE '%' || lower(#{searchWord}) || '%'
                </when>
                <when test="searchType == 'board_subject_board_content' and searchWord != ''">
                    AND (lower(board_subject) LIKE '%' || lower(#{searchWord}) || '%' 
                         OR lower(board_content) LIKE '%' || lower(#{searchWord}) || '%')
                </when>
                <when test="searchType == 'board_name' and searchWord != ''">
                    AND lower(board_name) LIKE '%' || lower(#{searchWord}) || '%'
                </when>
                <otherwise></otherwise>
            </choose>
            ORDER BY board_regDate DESC
        ) V
    ) T   
    WHERE rno BETWEEN to_number(#{startRno}) AND to_number(#{endRno})
</select>






   
</mapper>
