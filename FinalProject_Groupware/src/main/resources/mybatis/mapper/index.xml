<?xml version="1.0" encoding="UTF-8"?>

<!-- ==== mapper 기본설정 ==== -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- ==== 루트 엘리먼트 & 네임스페이스 설정(프로젝트 전체내에서 유일해야 한다.) ==== -->
<mapper namespace="index">
<!-- 출근기록 목록 -->
	<resultMap id="StartRecord_map" type="HashMap" >
	    <result property="work_recorddate"  	column="work_recorddate" 		javaType="String" />
	    <result property="work_starttime" 		column="work_starttime" 		javaType="String" />
	    <result property="work_startstatus" 	column="work_startstatus"    	javaType="String" />
	</resultMap>
	<select id="StartRecord" parameterType="String" resultMap="StartRecord_map">
	select to_char(work_recorddate, 'yyyy-mm-dd') as work_recorddate, to_char(work_starttime, 'hh24:mi:ss') as work_starttime, work_startstatus
    from tbl_work a join tbl_member b
    on a.fk_member_userid = b.member_userid
    WHERE TRUNC(work_recorddate) = to_char(TRUNC(SYSDATE))
          and fk_member_userid = #{member_userid}
    order by work_recorddate desc
	</select>
	
	<!-- 퇴근기록 목록 -->
	<resultMap id="EndRecord_map" type="HashMap" >
	    <result property="work_recorddate"  	column="work_recorddate" 		javaType="String" />
	    <result property="work_endtime"   		column="work_endtime" 			javaType="String" />
	    <result property="work_endstatus"    	column="work_endstatus" 		javaType="String" />
	</resultMap>
	<select id="EndRecord" parameterType="String" resultMap="EndRecord_map">
    select to_char(work_recorddate, 'yyyy-mm-dd') as work_recorddate, to_char(work_endtime, 'hh24:mi:ss') as work_endtime, work_endstatus
    from tbl_work a join tbl_member b
    on a.fk_member_userid = b.member_userid
    WHERE TRUNC(work_recorddate) = to_char(TRUNC(SYSDATE))
          and fk_member_userid = #{member_userid} and work_endstatus is not null
    order by work_recorddate desc
	</select>
	
	<!-- 공지사항 목록 불러오기  -->
	<select id="notice_list" parameterType="NoticeVO" resultType="NoticeVO">
		select *
		from
		(
		   	select rownum as rno, notice_no, fk_member_userid,  fk_child_dept_no, notice_dept, 
 			case when length(notice_title) > 23 then substr(notice_title,1,30) || ' ...' else notice_title end as notice_title,
       			   notice_content, notice_fix, notice_del, notice_view_cnt, notice_filename, 
           		   to_char(notice_write_date, 'yyyy-mm-dd') as notice_write_date
		    from tbl_notice a join tbl_member b
		    on a.fk_member_userid = b.member_userid
		    where notice_dept in 
		    <foreach item="parent_dept_no" collection="parent_deptList" open="(" separator="," close=")">
		    	#{parent_dept_no}
		    </foreach>
		    and MEMBER_LAST IS NULL 
		    order by notice_fix desc, notice_write_date desc
		)
		where rno BETWEEN 1 AND 4
	</select>
	
	<!-- 오늘 진료환자 목록 -->
	<resultMap id="PatientListMap" type="HashMap">
	    <result property="patient_no" 			column="patient_no" 		javaType="String" />
	    <result property="child_dept_name"  	column="child_dept_name" 	javaType="String" />
	    <result property="patient_name" 		column="patient_name" 		javaType="String" />
	    <result property="patient_gender"   	column="patient_gender" 	javaType="String" />
	    <result property="patient_visitdate"    column="patient_visitdate" 	javaType="String" />
	</resultMap>
	<select id="patientList" parameterType="HashMap" resultMap="PatientListMap">
		select *
		from
		(
		select rownum as rno, patient_no, child_dept_name, patient_name,
		       patient_gender, patient_visitdate
		from 
		    (
		        SELECT patient_no, child_dept_name, patient_name,
		               patient_gender, to_char(patient_visitdate, 'yyyy-mm-dd') as patient_visitdate
		        FROM tbl_patient a 
		        JOIN tbl_child_dept b 
		        ON a.fk_child_dept_no = b.child_dept_no 
		        WHERE TRUNC(patient_visitdate) = to_char(TRUNC(SYSDATE))
			    order by patient_visitdate desc
		    )a join tbl_order b
		    on a.patient_no = b.fk_patient_no 
		    where order_no is not null
		) 
		where rno BETWEEN 1 AND 5
	</select>
	
	
	
	<!-- 결재문서함 -->
	<select id="approvalPendingList" resultType="ApprovalVO" parameterType="HashMap">
		select *
		from
		(
		    with A as
		    (
		        select fk_draft_no, fk_member_userid, approval_step, approval_status
		        from tbl_approval
		        where fk_member_userid = #{member_userid}
		    ),
		    B as
		    (
		        select draft_no, draft_form_type
		             , case when length(draft_subject) > 15 then substr(draft_subject, 1, 13) || '..' else draft_subject end as draft_subject
		             , to_char(draft_write_date, 'yyyy-mm-dd') as draft_write_date, draft_status, draft_urgent, draft_file_origin_name, draft_file_name, draft_file_size
		             , member_name, parent_dept_name
		        from tbl_draft D join tbl_member M
		        on D.fk_member_userid = M.member_userid
		        join tbl_child_dept C
		        on M.fk_child_dept_no = C.child_dept_no
		        join tbl_parent_dept P
		        on C.fk_parent_dept_no = P.parent_dept_no
		    )
		    select rownum as rno, fk_draft_no, fk_member_userid, approval_step, approval_status
		         , draft_no, draft_form_type, draft_subject, draft_write_date, draft_status, draft_urgent, draft_file_origin_name, draft_file_name, draft_file_size
		         , member_name, parent_dept_name
		    from A join B
		    on A.fk_draft_no = B.draft_no
		    where approval_status != '대기'
		    order by fk_draft_no desc
		)
		where rno between 1 AND  5
		</select>
	
	
	<resultMap id="alarm_map" type="HashMap">
		<result property="alarm_no" column="alarm_no" />
		<result property="fk_member_userid" column="fk_member_userid" />
		<result property="alarm_category" column="alarm_category"  />
		<result property="alarm_cateno" column="alarm_cateno"  />
		<result property="alarm_at" column="alarm_at" />
		<result property="alarm_is_read" column="alarm_is_read" />
		<result property="approval_status" column="approval_status" /> 
	    <result property="alarm_title" column="alarm_title" /> 
	    <result property="notice_dept" column="notice_dept" /> 
	<association property="ManagementVO" javaType="ManagementVO_ga">
		<result property="member_last" column="member_last"/>
    </association>
	</resultMap>
	<select id="get_alarm_totalCount" resultType="int" parameterType="HashMap">
	SELECT COUNT(*) 
	FROM tbl_alarm a
	LEFT JOIN tbl_approval p ON a.alarm_cateno = p.fk_draft_no
	LEFT JOIN tbl_draft d ON p.fk_draft_no = d.draft_no
	LEFT JOIN tbl_notice n ON a.alarm_cateno = n.notice_no
	LEFT JOIN tbl_member u ON n.fk_member_userid = u.member_userid
	WHERE a.fk_member_userid = #{member_userid} 
	  AND a.ALARM_IS_READ = 0
	  AND (
    (p.approval_status = '결재예정' AND p.approval_step != 0 and approval_status != '대기') 
    OR (n.notice_no IS NOT NULL)
  )
	</select>
	
	<select id="get_alarm_view" parameterType="HashMap" resultMap="alarm_map">
	select 
	    m.fk_member_userid, m.alarm_no, a.approval_status, null notice_dept, m.alarm_category,
	    case when length(d.draft_subject) > 20 then substr(d.draft_subject,1,15) || ' ..' else d.draft_subject end as alarm_title,
	      m.alarm_cateno,
	    to_char(m.alarm_at, 'yyyy-mm-dd') as alarm_at, m.alarm_is_read
	from tbl_alarm m
	join tbl_approval a on m.alarm_cateno = a.fk_draft_no
	join tbl_draft d on a.fk_draft_no = d.draft_no
	where m.fk_member_userid = #{member_userid} 
	  and a.approval_status = '결재예정' 
	  and a.approval_step != 0
	  and approval_status != '대기'
	
	union all
	
	select 
	    m.fk_member_userid, m.alarm_no, null as approval_status, n.notice_dept, m.alarm_category,
	     case when length(n.notice_title) > 20 then substr(n.notice_title,1,15) || ' ..' else n.notice_title end as alarm_title,
	      m.alarm_cateno,  
	    to_char(m.alarm_at, 'yyyy-mm-dd') as alarm_at, m.alarm_is_read
	from tbl_alarm m
	join tbl_notice n on m.alarm_cateno = n.notice_no
	join tbl_member u on n.fk_member_userid = u.member_userid
	where m.fk_member_userid = #{member_userid} 
	order by alarm_no desc
	</select>
	
	<update id="alarm_is_read_1" parameterType="int">
		update tbl_alarm set alarm_is_read = 1
		where alarm_no = #{alarm_no} and approval_status != '대기'
	</update>
	
</mapper>