<?xml version="1.0" encoding="UTF-8"?>

<!-- ==== mapper 기본설정 ==== -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- ==== 루트 엘리먼트 & 네임스페이스 설정(프로젝트 전체내에서 유일해야 한다.) ==== -->
<mapper namespace="hyeyeon">
	
	<!-- **************************** 수술예약관련 mapper **************************** -->	
	<select id="registerListCnt" resultType="int">
		select count(*)
		from 
		(
		    with
		    a as
		    (
		        select order_no, fk_patient_no, order_issurg
		        from tbl_order a join tbl_surgery b
		        on a.order_no = b.fk_order_no
		        where order_issurg = 1 and surgery_status = 0 and order_isConfirmed = 1
		    ),
		    b as
		    (
		        select patient_no, fk_child_dept_no, patient_name, patient_visitdate, child_dept_name,
		               patient_gender, patient_jubun
		        from tbl_patient a join tbl_child_dept b
		        on a.fk_child_dept_no = b.child_dept_no
		        order by patient_visitdate asc
		    )
    		select rownum as rno, order_no, patient_visitdate, child_dept_name, patient_name, patient_gender, patient_jubun
		    from a join b
		    on a.fk_patient_no = b.patient_no
		)
	</select>
	
	
	<!-- 수술 대기환자 목록보기 -->
	<resultMap id="registerList_map" type="HashMap">
	    <result property="order_no" 		 		column="order_no" 		  	  javaType="String" />
    	<result property="patient_visitdate"  		column="patient_visitdate" 	  javaType="String" />
	    <result property="child_dept_name" 	 		column="child_dept_name" 	  javaType="String" />
    	<result property="patient_name" 			column="patient_name"    	  javaType="String" />
	    <result property="patient_gender"   		column="patient_gender" 	  javaType="String" />
	    <result property="patient_jubun" 			column="patient_jubun" 		  javaType="String" />
	    <result property="surgery_description" 		column="surgery_description"  javaType="String" />
	</resultMap>
	<select id="registerList" parameterType="HashMap" resultMap="registerList_map">
		select *
		from 
		(
		    with
		    a as
		    (
		        select order_no, fk_patient_no, order_issurg
		        from tbl_order a join tbl_surgery b
		        on a.order_no = b.fk_order_no
		        where order_issurg = 1 and surgery_status = 0 and order_isConfirmed = 1
		    ),
		    b as
		    (
		        select patient_no, fk_child_dept_no, patient_name, patient_visitdate, child_dept_name,
		               patient_gender, patient_jubun
		        from tbl_patient a join tbl_child_dept b
		        on a.fk_child_dept_no = b.child_dept_no
		        order by patient_visitdate asc
		    )
    		select rownum as rno, order_no, to_char(patient_visitdate, 'yyyy-mm-dd') as patient_visitdate, child_dept_name, patient_name, patient_gender, patient_jubun
		    from a join b
		    on a.fk_patient_no = b.patient_no
		)
		WHERE rno BETWEEN to_number(#{startRno}) AND to_number(#{endRno})
	</select>
	
	<!-- 환자 이름 가져오기 -->
	<select id="getName" resultType="String" parameterType="String">		
		select patient_name
		from tbl_order a join tbl_patient b
		on a.fk_patient_no = b.patient_no
		where order_no = #{order_no}
	</select>
	
	<!-- 수술 설명 가져오기 -->
	<select id="surgery_description" resultType="String" parameterType="String">
		select surgery_description
		from tbl_surgery
		where fk_order_no = #{order_no}
	</select>
	
	<!-- 수술실 목록 불러오기 -->
	<select id="getRoom" resultType="SurgeryroomVO">
		select surgeryroom_no, surgeryroom_name
		from tbl_surgeryroom
	</select>
	
	<!-- 예약된 수술시간 가져오기 -->
	<resultMap type="HashMap" id="reservedTime">
		<result property="surgery_start_time" 		column="surgery_start_time"	  javaType="String" />
    	<result property="surgery_end_time"  		column="surgery_end_time" 	  javaType="String" />
	</resultMap>
	<select id="reservedTime"  parameterType="HashMap" resultMap="reservedTime">
		select to_char(surgery_start_time, 'HH24:MI') as surgery_start_time,
			   to_char(surgery_end_time, 'HH24:MI') as surgery_end_time
		from tbl_surgery
		where surgery_surgeryroom_name = #{surgery_surgeryroom_name} and surgery_day = to_date(#{surgery_day}, 'yyyy-mm-dd')
	</select>
	
	<!-- 주민번호 알아오기 -->
	<select id="jubun" parameterType="SurgeryVO" resultType="String">
			select patient_jubun
			from
			(
			    select fk_patient_no, order_no
			    from tbl_surgery a join tbl_order b 
			    on a.fk_order_no = b.order_no
			) a join tbl_patient b
			on a.fk_patient_no = b.patient_no
			where order_no = #{fk_order_no}
	</select>
	
	<!-- 1. 동일한 환자가 같은 날 다른 수술이 있는지 확인하기 (수술은 하루에 한개만 가능) -->
	<select id="todayOtherSurgery" resultType="int" parameterType="map">
			select count(*)
			from 
			(
			    select fk_patient_no, surgery_day
			    from tbl_surgery a join tbl_order b
			    on a.fk_order_no = b.order_no
			) a join tbl_patient b
			on a.fk_patient_no = b.patient_no
			where patient_jubun = #{jubun} and 
	      		  surgery_day = to_date(#{surgery_day}, 'yyyy-mm-dd')
	</select>
	
	
	<!-- 2. 수술 예약 동시성처리하기 -->
	<select id="existingSurgery" resultType="SurgeryVO" parameterType="map">
			select * 
			from tbl_surgery
			where surgery_surgeryroom_name = #{surgery_surgeryroom_name}
			and surgery_day = to_date(#{surgery_day}, 'yyyy-mm-dd')
			and surgery_start_time = to_date(#{surgery_start_time},'HH24:MI') 
			for update  
	</select>
	
	<!-- 3. 수술 예약하기 -->
	<update id="insertSurgery" parameterType="SurgeryVO">
		update tbl_surgery
		set surgery_surgeryroom_name = #{surgery_surgeryroom_name},
		    surgery_reserve_date = sysdate,
		    surgery_day = to_date(#{surgery_day}, 'yyyy-mm-dd'),
		    surgery_start_time = to_date(#{surgery_start_time},'HH24:MI'),
		    surgery_end_time = to_date(#{surgery_end_time},'HH24:MI'),
		    surgery_description = #{surgery_description},
		    surgery_status = 1
		where fk_order_no = #{fk_order_no}
	</update>
	
	<!-- 수술 일정 수정하기 -->
	<update id="surgeryUpdate" parameterType="map">
		update tbl_surgery
		set surgery_surgeryroom_name = #{surgery_surgeryroom_name},
		    surgery_reserve_date = sysdate,
		    surgery_day = to_date(#{surgery_day}, 'yyyy-mm-dd'),
		    surgery_start_time = to_date(#{surgery_start_time},'HH24:MI'),
		    surgery_end_time = to_date(#{surgery_end_time},'HH24:MI'),
		    surgery_status = 1
		where fk_order_no = #{fk_order_no}
	</update>
	
	<!-- 수술 현황 캘린더조회 -->
	<select id="surgerySchedule" resultType="Calendar_surgery_recordVO">
		select surgery_no, surgery_surgeryroom_name,
		       to_char(surgery_day, 'yyyy-mm-dd') as surgery_day, 
		       to_char(surgery_start_time, 'hh24:mi:ss') as surgery_start_time, 
		       to_char(surgery_end_time, 'hh24:mi:ss') as surgery_end_time
		from tbl_surgery
		where surgery_day is not null
	</select>
	
	<!-- **************************** 수술예약관련 mapper 끝 **************************** -->
	
	
	<!-- **************************** 입원예약관련 mapper 시작 **************************** -->	
	<!-- 입원 대기자 목록 총 개수 -->
	<select id="hospitalize_list_cnt" resultType="int">
		select count(*)
		from 
		(
		    with 
		    a as
		    (
		        select order_no, fk_patient_no, order_howlonghosp
		        from tbl_order a join tbl_hospitalize b
		        on a.order_no = b.fk_order_no
		        where order_ishosp = 1 and hospitalize_status = 0 and order_isConfirmed = 1
		    ),
		    b as
		    (
		         select patient_no, fk_child_dept_no, patient_name, patient_visitdate, child_dept_name,
		                patient_gender, patient_jubun
		         from tbl_patient a join tbl_child_dept b
		         on a.fk_child_dept_no = b.child_dept_no
		         order by patient_visitdate asc
		    )
		select rownum as rno, order_no, patient_visitdate, child_dept_name, child_dept_name, patient_name, patient_gender, patient_jubun
		from a join b
		on a.fk_patient_no = b.patient_no
		)
	</select>
	
	
	<resultMap type="HashMap" id="hospitalize_list_map">
		<result property="order_no" 				column="order_no" 			javaType="String" />
		<result property="patient_visitdate" 		column="patient_visitdate" 	javaType="String" />
		<result property="child_dept_name" 			column="child_dept_name" 	javaType="String" />
		<result property="patient_name" 			column="patient_name" 		javaType="String" />
		<result property="patient_gender" 			column="patient_gender" 	javaType="String" />
		<result property="patient_jubun" 			column="patient_jubun" 		javaType="String" />
	</resultMap>
	<select id="hospitalize_list" parameterType="HashMap" resultMap="hospitalize_list_map">
		select *
		from 
		(
		    with 
		    a as
		    (
		        select order_no, fk_patient_no, order_howlonghosp
		        from tbl_order a join tbl_hospitalize b
		        on a.order_no = b.fk_order_no
		        where order_ishosp = 1 and hospitalize_status = 0 and order_isConfirmed = 1
		    ),
		    b as
		    (
		         select patient_no, fk_child_dept_no, patient_name, patient_visitdate, child_dept_name,
		                patient_gender, patient_jubun
		         from tbl_patient a join tbl_child_dept b
		         on a.fk_child_dept_no = b.child_dept_no
		         order by patient_visitdate asc
		    )
		    select rownum as rno, order_no, to_char(patient_visitdate, 'yyyy-mm-dd') as patient_visitdate, child_dept_name, patient_name, patient_gender, patient_jubun
		    from a join b
		    on a.fk_patient_no = b.patient_no
		)
		WHERE rno BETWEEN to_number(#{startRno2}) AND to_number(#{endRno2})
	</select>
	
	<!-- 입원일수  -->
	<select id="order_howlonghosp" resultType="String" parameterType="String">
		select order_howlonghosp
		from tbl_order
		where order_no = #{order_no}
	</select>
	
	<!-- 입원실 잔여석 -->
	<resultMap type="HashMap" id="okSeat_map">
		<result property="hospitalizeroom_no" 			column="hospitalizeroom_no" 			javaType="String" />
		<result property="ok_seat" 								column="ok_seat" 								javaType="String" />
		<result property="hospitalizeroom_capacity" 	column="hospitalizeroom_capacity" 	javaType="String" />
		<result property="reserved_cnt" 						column="reserved_cnt" 						javaType="String" />
	</resultMap>
	<select id="okSeat" resultMap="okSeat_map" parameterType="HashMap">
		with 
		a as
		(
		    select to_number(count(*)) as reserved_cnt, fk_hospitalizeroom_no
		    from tbl_hospitalize 
		    where hospitalize_start_day &lt; to_date(#{hospitalize_end_day}, 'yyyy-mm-dd') and hospitalize_end_day &gt; to_date(#{hospitalize_start_day}, 'yyyy-mm-dd')
		    group by fk_hospitalizeroom_no
		),
		b as
		(
		    select hospitalizeroom_no, to_number(hospitalizeroom_capacity) as hospitalizeroom_capacity
		    from tbl_hospitalizeroom
		)
		select hospitalizeroom_no, hospitalizeroom_capacity, nvl(reserved_cnt, 0) as reserved_cnt, 
		            nvl((hospitalizeroom_capacity - reserved_cnt), hospitalizeroom_capacity) as ok_seat
		from a right join b
		on a.fk_hospitalizeroom_no = b.hospitalizeroom_no
	</select>
	
	<!-- 중복 입원 확인을 위해 주민번호 알아오기 -->
	<select id="jubunGet" resultType="String" parameterType="HospitalizeVO">
			select distinct patient_jubun
			from
			(
			select fk_order_no, fk_patient_no
			from tbl_hospitalize a join tbl_order b
			on a.fk_order_no = b.order_no
			) a join tbl_patient b
			on a.fk_patient_no = b.patient_no
			where fk_order_no = #{fk_order_no}
	</select>
	
	
	<!-- 1. 동일한 입원일/퇴원일에 다른 입원건이 있는지 확인 -->
	<select id="todayOtherHospitalize" parameterType="map" resultType="int">
		select count(*)
		from
		(
		select fk_patient_no
		from tbl_hospitalize a join tbl_order b
		on a.fk_order_no = b.order_no
		where hospitalize_start_day &lt; #{hospitalize_end_day} and
		      hospitalize_end_day &gt; #{hospitalize_start_day} 
		) a join tbl_patient b
		on a.fk_patient_no = b.patient_no
		where patient_jubun = #{jubun}
	</select>
	
	
	<!-- 2. 비관적락 사용해서 예약된 시간인지 확인하기(입원) -->
	<select id="existingHospitalize" resultType="HospitalizeVO" parameterType="map">
		select * 
		from tbl_hospitalize
		where fk_hospitalizeroom_no = #{fk_hospitalizeroom_no}
		and (
		    (hospitalize_start_day &lt;= TO_DATE(#{hospitalize_end_day}, 'yyyy-mm-dd') and
		     hospitalize_end_day &gt;= TO_DATE(#{hospitalize_start_day}, 'yyyy-mm-dd'))
		)
		for update
	</select>
	
	<!-- 3. 입원 예약하기 -->
	<update id="hospitalizeRegister" parameterType="HospitalizeVO">
		update tbl_hospitalize
		set fk_hospitalizeroom_no = #{fk_hospitalizeroom_no},
		    hospitalize_reserve_date = sysdate,
		    hospitalize_start_day =  to_date(#{hospitalize_start_day}, 'yyyy-mm-dd'),
		    hospitalize_end_day = to_date(#{hospitalize_end_day}, 'yyyy-mm-dd'),
		    hospitalize_status = 1
		where fk_order_no = #{fk_order_no}
	</update>
	
	<!-- 입원 수정하기 -->
	<update id="hospitalizeUpdate" parameterType="map">
		update tbl_hospitalize
		set fk_hospitalizeroom_no = #{fk_hospitalizeroom_no},
		    hospitalize_reserve_date = sysdate,
		    hospitalize_start_day =  to_date(#{hospitalize_start_day}, 'yyyy-mm-dd'),
		    hospitalize_end_day = to_date(#{hospitalize_end_day}, 'yyyy-mm-dd'),
		    hospitalize_status = 1
		where fk_order_no = #{fk_order_no}
	</update>
	
	<!-- 입원실 현황 캘린더조회 -->
	<select id="hospitalizeScheduleList" resultType="Calendar_hospitalize_recordVO">
		select fk_hospitalizeroom_no, hospitalize_start_day, hospitalize_end_day, patient_name 
		from
		(
		select  hospitalize_no, fk_hospitalizeroom_no, 
		        to_char(hospitalize_start_day, 'yyyy-mm-dd') as hospitalize_start_day,
		        to_char(hospitalize_end_day, 'yyyy-mm-dd') as hospitalize_end_day,
		        fk_patient_no
		from tbl_hospitalize a join tbl_order b
		on a.fk_order_no = b.order_no
		) a join tbl_patient b
		on a.fk_patient_no = b.patient_no
	</select>
	<!-- **************************** 입원예약관련 mapper 끝 **************************** -->	
	
	
</mapper>