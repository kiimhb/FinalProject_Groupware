<?xml version="1.0" encoding="UTF-8"?>

<!-- ==== mapper 기본설정 ==== -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- ==== 루트 엘리먼트 & 네임스페이스 설정(프로젝트 전체내에서 유일해야 한다.) ==== -->
<mapper namespace="management_ga">

	<select id="parentDeptList"  parameterType="HashMap" resultType="Parent_deptVO_ga">
		select parent_dept_no,
		parent_dept_name
		from tbl_parent_dept
	</select>

	<select id="childDeptJSON" parameterType="HashMap"
		resultType="Child_deptVO_ga">
		select child_dept_no, fk_parent_dept_no, child_dept_name
		from tbl_child_dept
		where fk_parent_dept_no = #{dept}
	</select>

	<insert id="manag_form" parameterType="ManagementVO_ga">
		insert into
		tbl_member(member_userid, fk_child_dept_no, member_pwd, member_name,
		member_mobile, member_email,member_birthday, member_gender,
		member_start, member_pro_filename, member_pro_orgfilename,
		member_pro_filesize,member_yeoncha, member_grade, member_workingTime,
		member_position)
		values(#{member_userid}, #{fk_child_dept_no},
		#{member_pwd}, #{member_name}, #{member_mobile},
		#{member_email},#{member_birthday}, #{member_gender}, #{member_start},
		#{member_pro_filename}, #{member_pro_orgfilename},
		#{member_pro_filesize}, #{member_yeoncha}, #{member_grade},
		#{member_workingTime}, #{member_position})
	</insert>

	<select id="getLoginMember" resultType="ManagementVO_ga"
		parameterType="HashMap">
		SELECT member_userid,  member_pwd, fk_child_dept_no, child_dept_name ,
		member_name, member_mobile, member_email,member_birthday,
		member_gender, member_start, member_last, member_pro_filename,
		member_pro_orgfilename, member_pro_filesize,
		member_yeoncha, member_grade, member_workingTime, member_position,
		member_sign_filename, member_sign_orgfilename, member_sign_filesize
		from tbl_member m
		JOIN TBL_CHILD_DEPT c
		ON m.fk_CHILD_DEPT_NO = c.CHILD_DEPT_NO
		where member_userid = #{member_userid} and member_pwd = #{member_pwd}
		and MEMBER_LAST IS NULL
	</select>

	<!-- === 총 사원수 구하기 검색이 있을 때와 검색이 없을때 로 나뉜다. === -->
	<select id="getTotalCount" parameterType="HashMap"
		resultType="int">
		select count(*)
		from tbl_member
		where MEMBER_LAST IS NULL
		<choose>
			<when test='searchType == "userid" and searchWord != ""'>
				and lower(member_userid) like '%'|| lower(#{searchWord}) ||'%'
			</when>
			<when test='searchType == "position" and searchWord != ""'>
				and lower(member_position) like '%'|| lower(#{searchWord}) ||'%'
			</when>
			<when test='searchType == "name" and searchWord != ""'>
				and lower(member_name) like '%'|| lower(#{searchWord}) ||'%'
			</when>
			<otherwise></otherwise>
		</choose>
	</select>

	<!-- === 사원 전체조회 === -->
	<select id="Manag_List" parameterType="HashMap"
		resultType="ManagementVO_ga">
		SELECT *
		FROM
		(
		SELECT ROW_NUMBER() OVER (ORDER BY m.MEMBER_START DESC) AS RNO,
		m.member_userid, m.MEMBER_START, m.fk_child_dept_no,
		c.child_dept_name, m.member_name, m.member_workingTime,
		m.member_gender, m.member_pro_filename, m.member_position
		FROM tbl_member m
		JOIN TBL_CHILD_DEPT c ON m.fk_CHILD_DEPT_NO = c.CHILD_DEPT_NO
		where MEMBER_LAST IS NULL
		<choose>
			<when test='searchType == "userid" and searchWord != ""'>
				and lower(member_userid) like '%'|| lower(#{searchWord}) ||'%'
			</when>
			<when test='searchType == "position" and searchWord != ""'>
				and lower(member_position) like '%'|| lower(#{searchWord}) ||'%'
			</when>
			<when test='searchType == "name" and searchWord != ""'>
				and lower(member_name) like '%'|| lower(#{searchWord}) ||'%'
			</when>
			<otherwise></otherwise>
		</choose>
		) V
		WHERE rno BETWEEN to_number(#{startRno}) AND to_number(#{endRno})
	</select>

	<!-- === 검색어 입력시 자동글 완성하기 6 === -->
	<select id="wordSearchShow" parameterType="HashMap"
		resultType="String">
		<choose>
			<when test='searchType == "userid"'>
				SELECT member_userid
			</when>
			<when test='searchType == "position"'>
				SELECT member_position
			</when>
			<otherwise>
				SELECT member_name
			</otherwise>
		</choose>
		FROM tbl_member
		where MEMBER_LAST IS NULL
		<choose>
			<when test='searchType == "userid" and searchWord != ""'>
				and lower(member_userid) LIKE '%' || lower(#{searchWord}) || '%'
			</when>
			<when test='searchType == "position" and searchWord != ""'>
				and lower(member_position) LIKE '%' || lower(#{searchWord}) || '%'
			</when>
			<otherwise>
				and lower(member_name) LIKE '%' || lower(#{searchWord}) || '%'
			</otherwise>
		</choose>
		<choose>
			<when test='searchType == "userid"'>
				ORDER BY MEMBER_START ASC
			</when>
			<when test='searchType == "position"'>
				ORDER BY MEMBER_START ASC
			</when>
			<otherwise>
				ORDER BY member_name ASC
			</otherwise>
		</choose>
	</select>

	<!-- === 인사관리 회원수정 한명의 멤버 조회 === -->
	<resultMap id="ManagementVOmap" type="ManagementVO_ga">
    <!-- 기본 필드 매핑 -->
     <result property="fk_child_dept_no" column="fk_child_dept_no"/>
    <result property="member_pro_filename" column="member_pro_filename"/>
    <result property="member_pro_orgfilename" column="member_pro_orgfilename"/>
    <result property="member_pro_filesize" column="member_pro_filesize"/>
    <result property="member_userid" column="member_userid"/>
    <result property="member_name" column="member_name"/>
    <result property="member_position" column="member_position"/>
    <result property="member_mobile" column="member_mobile"/>
    <result property="member_birthday" column="member_birthday"/>
    <result property="member_gender" column="member_gender"/>
    <result property="member_email" column="member_email"/>
    <result property="member_start" column="member_start"/>
    <result property="member_last" column="member_last"/>
    <result property="member_grade" column="member_grade"/>
    <result property="member_yeoncha" column="member_yeoncha"/>
	<result property="member_workingTime" column="member_workingTime"/>


    <!-- Child_deptVO_ga 매핑 -->
    <association property="ChildVO" javaType="Child_deptVO_ga">
        <result property="child_dept_no" column="child_dept_no"/>
        <result property="child_dept_name" column="child_dept_name"/>
        <result property="fk_parent_dept_no" column="fk_parent_dept_no"/>
    </association>

    <!-- Parent_deptVO_ga 매핑 -->
    <association property="ParentVO" javaType="Parent_deptVO_ga">
        <result property="parent_dept_no" column="parent_dept_no"/>
        <result property="parent_dept_name" column="parent_dept_name"/>
    </association>
	</resultMap>
	
	
	
	<select id="getView_member_one" resultMap="ManagementVOmap" parameterType="HashMap">
	    SELECT member_userid, m.fk_child_dept_no, child_dept_name, fk_parent_dept_no, parent_dept_name,
	           member_name, member_mobile, member_email, member_birthday,
	           member_gender, member_start, member_last, member_pro_filename,
	           member_pro_orgfilename, member_pro_filesize,
	           member_yeoncha, member_grade, member_workingTime, member_position
	    FROM tbl_member m
	    JOIN TBL_CHILD_DEPT c ON m.fk_CHILD_DEPT_NO = c.CHILD_DEPT_NO
	    JOIN TBL_PARENT_DEPT p ON c.FK_PARENT_DEPT_NO = p.PARENT_DEPT_NO
	    WHERE member_userid = #{member_userid}
	</select>
	
	<update id="management_one_delete" parameterType="ManagementVO_ga">
		update tbl_member set member_last = to_char(sysdate, 'yyyy-mm-dd')
		where member_userid = #{member_userid}
	</update>
	
	<update id="Management_one_update" parameterType="ManagementVO_ga">
		update tbl_member set
		fk_child_dept_no = to_number(#{fk_child_dept_no}),
		member_name = #{member_name},
		member_mobile = #{member_mobile},
		member_email = #{member_email},
		member_birthday = #{member_birthday},
		member_pro_filename = #{member_pro_filename},
		member_pro_orgfilename = #{member_pro_orgfilename},
		member_pro_filesize = #{member_pro_filesize},
		member_gender = #{member_gender},
		member_yeoncha = #{member_yeoncha},
		member_grade = #{member_grade},
		member_workingTime = #{member_workingTime},
		member_position = #{member_position}
		where member_userid = #{member_userid}
	</update>
	
	<select id="get_commuteList_TotalCount" parameterType="HashMap" resultType="int">
    select count(distinct m.member_userid)
    from tbl_member m
    left join tbl_draft d on m.member_userid = d.fk_member_userid and d.draft_status = '승인완료'
    left join tbl_day_leave l on d.draft_no = l.fk_draft_no
    left join tbl_child_dept c on m.fk_child_dept_no = c.child_dept_no
    left join tbl_work w on m.member_userid = w.fk_member_userid
    where m.MEMBER_LAST IS NULL
    <choose>
        <when test='searchType == "userid" and searchWord != ""'>
            and lower(m.member_userid) like '%' || lower(#{searchWord}) || '%'
        </when>
        <when test='searchType == "name" and searchWord != ""'>
            and lower(m.member_name) like '%' || lower(#{searchWord}) || '%'
        </when>
    </choose>
	</select>


	<resultMap type="HashMap" id="manag_commuteListMAP">
	<result property="member_userid" column="member_userid" javaType="String" />
	<result property="member_name" column="member_name" javaType="String" />
	<result property="child_dept_name" column="child_dept_name" javaType="String" />
	<result property="member_position" column="member_position" javaType="String" />
	<result property="click" column="click" javaType="String" />
	<result property="late" column="late" javaType="String" />
	<result property="leave" column="leave" javaType="String" />
	<result property="absent" column="absent" javaType="String" />
	<result property="total_count" column="total_count" javaType="String" />
	<result property="day_leave_cnt" column="day_leave_cnt" javaType="String" />
	<result property="member_yeoncha" column="member_yeoncha" javaType="String" />
	</resultMap>
	<select id="manag_commuteList" resultMap="manag_commuteListMAP" parameterType="HashMap">
	  	WITH a AS (
	    SELECT 
	        m.member_userid, 
	        m.member_name, 
	        c.child_dept_name,
	        m.member_position,
	        m.member_start,
	        m.member_last,
	        COALESCE(l.day_leave_cnt, 0) AS day_leave_cnt, 
	        m.member_yeoncha
	    FROM tbl_member m 
	    LEFT JOIN tbl_draft d ON m.member_userid = d.fk_member_userid AND d.draft_status = '승인완료' 
	    LEFT JOIN tbl_day_leave l ON d.draft_no = l.fk_draft_no
	    LEFT JOIN tbl_child_dept c ON m.fk_child_dept_no = c.child_dept_no
	),
	b AS (
	    SELECT
	        m.member_userid,
	        COALESCE(COUNT(CASE WHEN work_startstatus = 0 OR work_endstatus = 0 THEN 1 END), 0) AS click,
	        COALESCE(COUNT(CASE WHEN work_startstatus = 1 THEN 1 END), 0) AS late,
	        COALESCE(COUNT(CASE WHEN work_endstatus = 1 THEN 1 END), 0) AS leave,
	        COALESCE(COUNT(CASE WHEN work_startstatus = 2 OR work_endstatus = 2 THEN 1 END), 0) AS absent,
	        (
	            COALESCE(COUNT(CASE WHEN work_startstatus = 1 THEN 1 END), 0) +
	            COALESCE(COUNT(CASE WHEN work_endstatus = 1 THEN 1 END), 0) +
	            COALESCE(COUNT(CASE WHEN work_startstatus = 2 OR work_endstatus = 2 THEN 1 END), 0)
	        ) AS total_count
	    FROM tbl_member m
	    LEFT JOIN tbl_work w ON w.fk_member_userid = m.member_userid
	    GROUP BY m.member_userid
	)
	SELECT * FROM (
	    SELECT  
	        a.member_userid,
	        a.member_name, 
	        a.child_dept_name,
	        a.member_position,
	        COALESCE(b.click, 0) AS click, 
	        COALESCE(b.late, 0) AS late, 
	        COALESCE(b.leave, 0) AS leave, 
	        COALESCE(b.absent, 0) AS absent, 
	        COALESCE(b.total_count, 0) AS total_count, 
	        COALESCE(SUM(a.day_leave_cnt), 0) AS day_leave_cnt,
	        a.member_yeoncha,
	        ROW_NUMBER() OVER (ORDER BY a.member_start DESC) AS rno
	    FROM a 
	    LEFT JOIN b ON a.member_userid = b.member_userid  
	    WHERE a.member_last IS NULL
	    <choose>
        <when test='searchType == "userid" and searchWord != ""'>
            and lower(m.member_userid) like '%' || lower(#{searchWord}) || '%'
        </when>
        <when test='searchType == "name" and searchWord != ""'>
            and lower(m.member_name) like '%' || lower(#{searchWord}) || '%'
        </when>
    </choose>
	    GROUP BY a.member_userid, a.member_name, a.child_dept_name, a.member_position, 
	             b.click, b.late, b.leave, b.absent, b.total_count, a.member_yeoncha, a.member_start
	)
	WHERE rno BETWEEN to_number(#{startRno}) AND to_number(#{endRno})
	</select>

	<resultMap type="HashMap" id="managementchartMAP">
	<result property="parent_dept"   	column="parent_dept"       javaType="String" />
	<result property="child_dept"   	column="child_dept"       javaType="String" />
	<result property="members"   	column="members"       javaType="String" />
	<result property="parent_total"   	column="parent_total"       javaType="String" />
	<result property="percentage"   	column="percentage"       javaType="String" />
	</resultMap>
	<select id="management_chart"  resultMap="managementchartMAP">
	WITH child_depts AS (
    SELECT c.child_dept_no, 
           c.child_dept_name, 
           c.fk_parent_dept_no, 
           COUNT(m.member_userid) AS member_count
    FROM tbl_child_dept c
    LEFT JOIN tbl_member m ON c.child_dept_no = m.fk_child_dept_no
    GROUP BY c.child_dept_no, c.child_dept_name, c.fk_parent_dept_no
	), 
	depts_count AS (
	    SELECT p.parent_dept_no, 
	           p.parent_dept_name, 
	           SUM(c.member_count) AS total_count
	    FROM tbl_parent_dept p
	    JOIN child_depts c ON c.fk_parent_dept_no = p.parent_dept_no  
	    GROUP BY p.parent_dept_no, p.parent_dept_name
	)
	SELECT p.parent_dept_name AS parent_dept,
	       c.child_dept_name AS child_dept, 
	       c.member_count AS members,  
	       d.total_count AS parent_total,
	       ROUND((c.member_count * 100.0) / NULLIF(d.total_count, 0), 2) AS percentage  
	FROM child_depts c
	JOIN depts_count d ON c.fk_parent_dept_no = d.parent_dept_no
	JOIN tbl_parent_dept p ON c.fk_parent_dept_no = p.parent_dept_no 
	ORDER BY c.fk_parent_dept_no, c.child_dept_name
	</select>
	
	<resultMap type="HashMap" id="managementchart2MAP">
		<result property="child_dept"   	column="child_dept"       javaType="String" />
		<result property="child_dept_count"   	column="child_dept_count"       javaType="String" />
		<result property="child_leave_cnt"   	column="child_leave_cnt"       javaType="String" />
	</resultMap>
	<select id="management_chart2"  resultMap="managementchart2MAP">
	select 
    c.child_dept_name as child_dept,
    count(distinct m.member_userid) as child_dept_count,  
    sum(nvl(l.day_leave_cnt, 0)) as child_leave_cnt
	from tbl_member m  
	left join tbl_draft d 
	    on m.member_userid = d.fk_member_userid 
	    and d.draft_status = '승인완료'  
	left join tbl_day_leave l 
	    on d.draft_no = l.fk_draft_no  
	left join tbl_child_dept c 
	    on m.fk_child_dept_no = c.child_dept_no  
	where m.member_last is null  
	group by c.child_dept_name  
	order by child_leave_cnt desc
	</select>








</mapper>